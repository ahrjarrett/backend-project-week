#+TITLE: Backend Server Readme

- Deploy (EC2 Instance):
  http://18.236.166.82/
  As of 11/30, deployed to port 80 instead of 7XXX

- Console: 
  https://console.aws.amazon.com/ec2/

- Node:
  v10.13.0

- OS:
  Ubuntu 18

* Tickets

** Deployment

*** TODO Set up npm run build command
*** TODO Set up git repo with post-receive hooks to automate deployment

** Backend
*** DONE Generate passwordHash on save

The difficulty is figuring out how it works with the metaprogramming done to generate the controllers

*** TODO Associate note id with User when saving note with User

Make that relationship bi-directional?

*** TODO Rework model

Create a "project" or "book" that has a one-to-many relationship with Notes

Create a "getMe" function that only fetches projects and notes that belong to the authenticated user

*** TODO Upgrade to apollo-server-express v2

[[https://www.apollographql.com/docs/apollo-server/migration-two-dot.html#simple-use][Instructions for migrating]]


* Deploy

After pushing your local changes to github:

1. Log into remote server
   
From your local branch (where your =.pem= key is), log in via SSH:

#+BEGIN_SRC
  $ ssh -i backend-project.pem ubuntu@18.236.166.82
  $ sudo su
  $ cd ~/workspace/backend-project-week
#+END_SRC

2. Pull in changes

Inside =/root/workspace/backend-project-week= on EC2 instance, do:

#+BEGIN_SRC shell
  $ git pull
#+END_SRC

3. Kill any pm2 processes with =pm2 delete <app-name>=, in this case =server= (named after =server.js=)

#+BEGIN_SRC 
  $ pm2 delete server
#+END_SRC


4. Build code and start app

From inside =./server/=:

#+BEGIN_SRC 
  $ rm -rf dist/
  $ sudo npm i
  $ NODE_ENV=prod npm start
  $ # then, kill that process
  $ pm2 start dist/server.js
#+END_SRC

For some reason bcrypt doesn't like to install without sudo. Need to create an =npm run build= script.

* Initial Config

** Config

Launching on AWS EC2 instance.

- IP Address:
  18.236.166.82

- Remote in:

  =ssh -i backend-project.pem ubuntu@18.236.166.82=, them =sudo su=
  
*Note:* Make sure you run =chmod 0400 <path-to-pemfile>=, otherwise AWS will complain that it's not secure!

*** Create a user with sudo privileges

Login as root, then do:

=adduser ahrjarrett=
=usermod -aG sudo ahrjarrett=
=su ahrjarrett=

** Installing Node

Installing version 10.x

#+BEGIN_SRC shell
  curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
  sudo apt-get install -y nodejs
#+END_SRC

** Setting up the app

Going to create our directory from home and call it =workspace=

#+BEGIN_SRC shell
  $ cd ~
  $ mkdir workspace
#+END_SRC

Now clone your repo, install dependencies, and run the app.

*** Exposing the app's port

EC2 needs to know which port to expose.

1. Go to the AWS console and click "NETWORK & SECURITY" >> *Security Groups*
2. Select the group name =launch-wizard-X=
3. Select the *Inbound* tab and click *Edit*, *Add Rule*

   | Type       | Protocol | Port Range | Source   | Description |
   |------------+----------+------------+----------+-------------|
   | Custom TCP | TCP      |       7000 | Anywhere | [Optional]  |
   
Now navigate to http://18.236.166.82:7000/ and you should see your dumb app running!




